cmake_minimum_required(VERSION 3.16)
project(MyGrpcProject)

set(CMAKE_CXX_STANDARD 17)

# My grpc installation prefix path: please use yours
set(CMAKE_PREFIX_PATH "$ENV{HOME}/opt/grpc")
set(gRPC_DIR "$ENV{HOME}/opt/grpc")

find_package(absl CONFIG REQUIRED)
find_package(Protobuf CONFIG REQUIRED)
find_package(gRPC CONFIG REQUIRED)

find_program(GRPC_CPP_PLUGIN_EXECUTABLE grpc_cpp_plugin)


set(_PROTOBUF_LIBPROTOBUF protobuf::libprotobuf)
set(_REFLECTION gRPC::grpc++_reflection)
set(_GRPC_GRPCPP gRPC::grpc++)

# Assuming task.proto is in the same directory as your CMakeLists.txt
set(PROTO_PATH "${CMAKE_CURRENT_SOURCE_DIR}")
set(TASK_SCHEDULER_PROTO "${PROTO_PATH}/task.proto")
set(SCHEDULER_PROTO "${PROTO_PATH}/scheduler.proto")

set(GENERATED_PROTOBUF_PATH "${CMAKE_CURRENT_BINARY_DIR}/generated")
file(MAKE_DIRECTORY ${GENERATED_PROTOBUF_PATH})

set(TASK_SCHEDULER_PB_CPP_FILE "${GENERATED_PROTOBUF_PATH}/task.pb.cc")
set(TASK_SCHEDULER_PB_H_FILE "${GENERATED_PROTOBUF_PATH}/task.pb.h")
set(TASK_SCHEDULER_GRPC_PB_CPP_FILE "${GENERATED_PROTOBUF_PATH}/task.grpc.pb.cc")
set(TASK_SCHEDULER_GRPC_PB_H_FILE "${GENERATED_PROTOBUF_PATH}/task.grpc.pb.h")

set(SCHEDULER_PB_CPP_FILE "${GENERATED_PROTOBUF_PATH}/scheduler.pb.cc")
set(SCHEDULER_PB_H_FILE "${GENERATED_PROTOBUF_PATH}/scheduler.pb.h")
set(SCHEDULER_GRPC_PB_CPP_FILE "${GENERATED_PROTOBUF_PATH}/scheduler.grpc.pb.cc")
set(SCHEDULER_GRPC_PB_H_FILE "${GENERATED_PROTOBUF_PATH}/scheduler.grpc.pb.h")

add_custom_command(
        OUTPUT "${TASK_SCHEDULER_PB_H_FILE}"
        "${TASK_SCHEDULER_PB_CPP_FILE}"
        "${TASK_SCHEDULER_GRPC_PB_H_FILE}"
        "${TASK_SCHEDULER_GRPC_PB_CPP_FILE}"
        "${SCHEDULER_PB_H_FILE}"
        "${SCHEDULER_PB_CPP_FILE}"
        "${SCHEDULER_GRPC_PB_H_FILE}"
        "${SCHEDULER_GRPC_PB_CPP_FILE}"
        COMMAND protobuf::protoc
        ARGS --grpc_out "${GENERATED_PROTOBUF_PATH}"
        --cpp_out "${GENERATED_PROTOBUF_PATH}"
        -I "${PROTO_PATH}"
        --plugin=protoc-gen-grpc="${GRPC_CPP_PLUGIN_EXECUTABLE}"
        "${TASK_SCHEDULER_PROTO}"
        COMMAND protobuf::protoc
        ARGS --grpc_out "${GENERATED_PROTOBUF_PATH}"
        --cpp_out "${GENERATED_PROTOBUF_PATH}"
        -I "${PROTO_PATH}"
        --plugin=protoc-gen-grpc="${GRPC_CPP_PLUGIN_EXECUTABLE}"
        "${SCHEDULER_PROTO}"
        DEPENDS "${TASK_SCHEDULER_PROTO}" "${SCHEDULER_PROTO}")


include_directories("${GENERATED_PROTOBUF_PATH}")

add_executable(my_client client.cpp
        ${TASK_SCHEDULER_PB_CPP_FILE}
        ${TASK_SCHEDULER_GRPC_PB_CPP_FILE}
        ${SCHEDULER_PB_CPP_FILE}
        ${SCHEDULER_GRPC_PB_CPP_FILE})

add_executable(my_server server.cpp
    ${TASK_SCHEDULER_PB_CPP_FILE}
    ${TASK_SCHEDULER_GRPC_PB_CPP_FILE}
    ${SCHEDULER_PB_CPP_FILE}
    ${SCHEDULER_GRPC_PB_CPP_FILE})






target_link_libraries(my_server
    ${_REFLECTION}
    ${_GRPC_GRPCPP}
    ${_PROTOBUF_LIBPROTOBUF}
    absl::base
    absl::strings
    absl::synchronization
    absl::time
    absl::log)

target_link_libraries(my_client
        ${_REFLECTION}
        ${_GRPC_GRPCPP}
        ${_PROTOBUF_LIBPROTOBUF}
        absl::base
        absl::strings
        absl::synchronization
        absl::time
        absl::log)